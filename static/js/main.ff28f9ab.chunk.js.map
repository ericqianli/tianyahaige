{"version":3,"sources":["image/background_body.jpg","image/background_left.jpg","image/background_right.jpg","font/ziyuesongkeben.ttf","type/Types.ts","action/Actions.ts","constant/Constants.ts","component/Content.tsx","manager/FormatManager.ts","constant/QuerySources.ts","manager/ConnectionManager.ts","selector/ContentStateSelector.ts","adaptor/ContentAdaptor.ts","container/ContentContainer.ts","reducer/ContentStateReducer.ts","reducer/Reducer.ts","store/Store.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","ActionType","receiveContent","content","type","RECEIVE_CONTENT","INITIAL_CONTENT_STATE","QueryType","MYSQL","PoemsContent","poems","length","map","poem","PoemContent","PoemHeader","title","subtitle","PoemBody","body","subtitleParts","test","split","len","remaining","SUBTITLE_CHARACTERS_PER_LINE","tailLength","slice","getFormattedSubtitle","className","lines","filter","line","compoments","push","Period","Content","props","myInput","React","createRef","this","fetchContent","classes","container","bookRightSide","bookContent","handleWidth","width","roundedWidth","isNaN","Math","ceil","ref","poemContent","style","minWidth","bookLeftSide","Component","withStyles","_theme","createStyles","height","overflowX","overflowY","backgroundColor","writingMode","backgroundImage","BackgroundBody","backgroundSize","backgroundPosition","BackgroundRight","BackgroundLeft","fontSize","margin","lineHeight","textAlign","color","position","right","top","float","marginTop","marginBottom","verticalAlign","display","clear","left","DEFAULT_MYSQL_QUERY_SOURCE_CONFIG","url","id","name","fetchContentPromise","a","queryConfig","source","database","table","sql","fetchQueryResultPromise","result","getPoems","createSelector","state","contentState","rows","row","camera_ready_content","ContentContainer","connect","dispatch","REQUEST_CONTENT","error","RECEIVE_CONTENT_ERROR","contentStateReducer","action","Reducer","Store","createStore","useStyles","makeStyles","theme","root","flexGrow","grid","minHeight","header","flexBasis","headerContent","main","alignItems","justifyContent","footer","footerContent","App","store","Grid","direction","justify","item","xs","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.ff28f9ab.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background_body.62a99315.jpg\";","module.exports = __webpack_public_path__ + \"static/media/background_left.50d23bf8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/background_right.bc21eb1b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ziyuesongkeben.ccdb4fa4.ttf\";","import { MySqlQueryResult } from \"data-sweet-query\";\n\n// Actions\nexport enum ActionType {\n    REQUEST_CONTENT = \"REQUEST_CONTENT\",\n    RECEIVE_CONTENT = \"RECEIVE_CONTENT\",\n    RECEIVE_CONTENT_ERROR = \"RECEIVE_CONTENT_ERROR\",\n}\n\n// Action Types\nexport interface RequestContentAction {\n    type: ActionType.REQUEST_CONTENT;\n}\n\nexport interface ReceiveContentAction {\n    type: ActionType.RECEIVE_CONTENT;\n    content: MySqlQueryResult;\n}\n\nexport interface ReceiveContentErrorAction {\n    type: ActionType.RECEIVE_CONTENT_ERROR;\n    error: any;\n}\n\nexport type ContentStateAction =\n    | RequestContentAction\n    | ReceiveContentAction\n    | ReceiveContentErrorAction;\n\n// States\nexport interface ContentState {\n    content: MySqlQueryResult;\n}\n\nexport interface Poem {\n    title: string;\n    subtitle: string;\n    body: string;\n}\n","import { MySqlQueryResult } from \"data-sweet-query\";\n\nimport {\n    ActionType, ReceiveContentAction, ReceiveContentErrorAction,\n    RequestContentAction\n} from \"../type/Types\";\n\nexport function requestContent(): RequestContentAction {\n    return {\n        type: ActionType.REQUEST_CONTENT,\n    };\n}\n\nexport function receiveContent(\n    content: MySqlQueryResult\n): ReceiveContentAction {\n    return {\n        type: ActionType.RECEIVE_CONTENT,\n        content,\n    };\n}\n\nexport function receiveContentError(error: Error): ReceiveContentErrorAction {\n    return {\n        type: ActionType.RECEIVE_CONTENT_ERROR,\n        error,\n    };\n}\n","import { QueryType } from \"data-sweet-query\";\n\nexport const INITIAL_CONTENT_STATE = {\n    content: { type: QueryType.MYSQL },\n};\n\nexport const INITIAL_CONTENT = `冬夜飲醉·學時應制\n攬袂泛靈水︒褰裳望紫薇︒回車駕四野︒謝屐倚崔嵬︒崖殘映月冷︒天高盡雁飛︒長風起華鬢︒霜冷凍蛾眉︒舉手天星遠︒俯身擷芳菲︒兩盞三月飲︒一壺轉清輝︒影亂且狂舞︒癲歌任冠危︒濕吾素青衫︒長餘陸離佩︒留月懶鞠水︒戀酒毋貪杯︒喪志豈非福︒弃輯安可悲︒援琴發清商︒音響吟式微︒忽憤紫冥頂︒白鹿安且在︒指劍西南隅︒天狼光已微︒初陽日漸遠︒斗柄夜逐回︒朝華既已披︒夕秀未可振︒依稀謝前世︒飄然忘今歸︒\n  夏望·歎\n蹙眉空坐冤疑鏡老容顏陰蘩固燦色陽景逐虛煙熏風總浮雀灼天遍落雲惟恨紅塵陌往來無聚年︒\n  劍仙·其三\n何故苦蹙眉︒似有不平事︒明朝逐雲去︒一劍撫三山︒\n  劍仙·其二\n吾意本清貧︒竟志褰劍裝︒三夫天下指︒魍魎盡聵盲︒弄玉馮昆吾︒汲波踏沅湘︒露凝雙鬢濕︒雲流若水長︒終倚崔巍去︒萬裏不同疆︒若非戾念深︒或可宿桃鄉︒\n  劍仙·其一\n千川劍惟流︒萬岳吾獨宗︒馮夷浣仙舄︒遺世逸華嵩︒\n  無題·生涯\n須臾末世徒幽望︒咫尺天涯惘斷腸︒頻倚劍峰期月水︒默吟殘賦淚星芒︒\n  無題·道癲\n獨對寒燈思徒矣︒褰裳一笑竟他年︒雕闌遍倚望雲老︒畫船空臥聽雨眠︒三潭弱水幾多月︒一頃西湖無限天︒殄盡金樽拼一醉︒奈由術序任誰仙︒\n  北念友人\n紫艶香殘日愈秋︒紅箋淚盡字成愁︒憑欄一望空江水︒徒赴孤帆苦北流︒\n  無題·傷雲期\n雁字回時凄南浦︒小霰分杯欲飲無︒雲期隨謝花零走︒淡看飛煙馮凜湖︒\n  夜泛秋湖\n秋旻多落雲︒平野將霧升︒漫花零入夜︒纖月散成紋︒小舟亂一頃︒弱酒醉三生︒何當枕來路︒釋數霜發增︒\n  夕雪\n玄凜幽風起︒霾靄逝天光︒霫霫入瀝泣︒雲霨見神煌︒霡霂紛然落︒霜露寒內傷︒氤氳窮冥暮︒霙作雨仿徨︒\n  無題·塵緣\n天晚楊糝忽作雪︒下渚輕舟逐水煙︒無花無酒春將老︒劍死琴銷了塵緣︒`;\n","import React from \"react\";\nimport ReactResizeDetector from \"react-resize-detector\";\n\nimport { createStyles, Theme, WithStyles, withStyles } from \"@material-ui/core\";\n\nimport { INITIAL_CONTENT } from \"../constant/Constants\";\nimport BackgroundBody from \"../image/background_body.jpg\";\nimport BackgroundLeft from \"../image/background_left.jpg\";\nimport BackgroundRight from \"../image/background_right.jpg\";\nimport { getFormattedSubtitle } from \"../manager/FormatManager\";\nimport { Poem } from \"../type/Types\";\n\nconst WIDTH = \"2.375rem\";\nconst HALF_WIDTH = \"1.1875rem\";\nconst BACKGROUND_SIZE = \"auto 48rem\";\n\nconst styles = (_theme: Theme) =>\n    createStyles({\n        container: {\n            height: \"44rem\",\n            overflowX: \"scroll\",\n            overflowY: \"hidden\",\n            backgroundColor: \"white\",\n            writingMode: \"vertical-rl\",\n        },\n        bookContent: {\n            height: \"44rem\",\n            backgroundImage: `url(${BackgroundBody})`,\n            backgroundSize: BACKGROUND_SIZE,\n            backgroundPosition: \"right\",\n        },\n        bookRightSide: {\n            height: \"44rem\",\n            width: \"4rem\",\n            backgroundImage: `url(${BackgroundRight})`,\n            backgroundSize: BACKGROUND_SIZE,\n            backgroundPosition: \"left\",\n        },\n        bookLeftSide: {\n            height: \"44rem\",\n            width: \"4rem\",\n            backgroundImage: `url(${BackgroundLeft})`,\n            backgroundSize: BACKGROUND_SIZE,\n            backgroundPosition: \"right\",\n        },\n        poemContent: {\n            fontSize: \"2rem\",\n            height: \"40rem\",\n            margin: \"2rem 0\",\n            width: \"fit-content\",\n            lineHeight: WIDTH,\n            textAlign: \"start\",\n            // textOrientation: \"upright\",\n            writingMode: \"vertical-rl\",\n            color: \"black\",\n            position: \"relative\",\n            right: \"-1.1rem\",\n            top: \"-0.1rem\",\n            \"& .header\": {\n                fontSize: \"1rem\",\n                lineHeight: HALF_WIDTH,\n            },\n            \"& .title\": {\n                fontSize: \"2rem\",\n                lineHeight: WIDTH,\n                float: \"left\",\n                marginTop: \"4rem\",\n                marginBottom: \"1rem\",\n            },\n            \"& .subtitle\": {\n                verticalAlign: \"top\",\n                display: \"block\",\n            },\n            \"& .body\": {\n                clear: \"both\",\n            },\n            \"& .period\": {\n                marginTop: 0,\n                marginBottom: \"-0.75rem\",\n                fontSize: \"0.75rem\",\n                lineHeight: HALF_WIDTH,\n                position: \"relative\",\n                top: \"-0.2rem\",\n                left: \"0.75rem\",\n                display: \"inline-block\",\n            },\n        },\n    });\n\ninterface Props extends WithStyles<typeof styles> {\n    poems: Poem[];\n    fetchContent: () => void;\n}\n\nfunction PoemsContent({ poems }: { poems: Poem[] }) {\n    if (poems.length === 0) {\n        return <p> {INITIAL_CONTENT} </p>;\n    }\n    return (\n        <>\n            {poems.map((poem) => (\n                <PoemContent poem={poem} />\n            ))}\n        </>\n    );\n}\n\nfunction PoemContent({ poem }: { poem: Poem }) {\n    return (\n        <div>\n            <PoemHeader title={poem.title} subtitle={poem.subtitle} />\n            <PoemBody body={poem.body} />\n        </div>\n    );\n}\n\nfunction PoemHeader({ title, subtitle }: { title: string; subtitle: string }) {\n    const subtitleParts = getFormattedSubtitle(title, subtitle);\n    return (\n        <div className=\"header\">\n            <span className=\"title\">{title}</span>\n            {subtitleParts.map((subtitle) => (\n                <span className=\"subtitle\">{subtitle}</span>\n            ))}\n        </div>\n    );\n}\n\nfunction PoemBody({ body }: { body: string }) {\n    const lines = body.split(\"︒\").filter((line) => line !== \"\");\n    const compoments = [];\n\n    for (const line of lines) {\n        compoments.push(line, <Period />);\n    }\n\n    return <div className=\"body\"> {compoments} </div>;\n}\n\nfunction Period() {\n    return <span className=\"period\">︒</span>;\n}\n\nclass Content extends React.Component<Props> {\n    myInput: any;\n\n    constructor(props: Props) {\n        super(props);\n        this.myInput = React.createRef();\n    }\n\n    componentDidMount() {\n        this.props.fetchContent();\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className={classes.container}>\n                <div className={classes.bookRightSide}></div>\n\n                <div className={classes.bookContent}>\n                    <ReactResizeDetector handleWidth>\n                        {({ width }: { width: number }) => {\n                            let roundedWidth = width;\n                            if (!isNaN(width)) {\n                                roundedWidth = 1824 * Math.ceil(width / 1824);\n                            }\n                            // console.log(width, roundedWidth);\n\n                            if (width === roundedWidth) {\n                                return (\n                                    <div\n                                        ref={this.myInput}\n                                        className={classes.poemContent}\n                                        style={{\n                                            minWidth: `${roundedWidth}px`,\n                                        }}\n                                    >\n                                        <PoemsContent\n                                            poems={this.props.poems}\n                                        />\n                                    </div>\n                                );\n                            } else {\n                                return (\n                                    <div\n                                        ref={this.myInput}\n                                        className={classes.poemContent}\n                                        style={{ width: `${roundedWidth}px` }}\n                                    >\n                                        <PoemsContent\n                                            poems={this.props.poems}\n                                        />\n                                    </div>\n                                );\n                            }\n                        }}\n                    </ReactResizeDetector>\n                </div>\n                <div className={classes.bookLeftSide}></div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(Content);\n","const CHARACTERS_TO_REMOVE = [\n    \"『\",\n    \"』\",\n    \"?\",\n    \"？\",\n    \"!\",\n    \"！\",\n    \"：\",\n    \"，\",\n    \"。\",\n    \"︒\",\n];\n\nconst DELIMITER = \"︒\";\n\nconst SUBTITLE_CHARACTERS_PER_LINE = 40;\nconst SUBTITLE_NO_WRAP_LIMIT = 4;\n\nexport function getFormattedCameraReadyContent(content: string) {\n    var re = new RegExp(`[${CHARACTERS_TO_REMOVE}]`, \"g\");\n    const lines = content\n        .split(/[\\\\r\\\\n|\\s+]/)\n        .map((line) => line.replace(re, \"\"))\n        .filter((line) => line !== \"\");\n\n    return lines.join(DELIMITER) + DELIMITER;\n}\n\nexport function getFormattedSubtitle(title: string, subtitle: string) {\n    const englishRegex = /^[A-Za-z0-9]/;\n    if (englishRegex.test(subtitle)) {\n        return subtitle.split(\"\\r\\n\");\n    }\n\n    let len = subtitle.length;\n\n    if (len <= SUBTITLE_NO_WRAP_LIMIT) {\n        return [subtitle];\n    }\n\n    let remaining = (SUBTITLE_CHARACTERS_PER_LINE - title.length * 2 - 5) * 2;\n\n    while (len > remaining) {\n        len -= remaining;\n        remaining = SUBTITLE_CHARACTERS_PER_LINE * 2;\n    }\n\n    const tailLength = len >>> 1;\n\n    return [subtitle.slice(0, -tailLength), subtitle.slice(-tailLength)];\n}\n","// Moved here to avoid cyclic reference\n\nimport { MySqlQuerySourceConfig, QueryType } from \"data-sweet-query\";\n\n// Service\n\nexport const MYSQL_SERVER_URL = \"https://datasweetdata.com:3030/mysql\";\n\n// Query sources\n\nexport const DEFAULT_MYSQL_QUERY_SOURCE_CONFIG: MySqlQuerySourceConfig = {\n    type: QueryType.MYSQL,\n    url: MYSQL_SERVER_URL,\n    id: \"default_mysql\",\n    name: \"MySql Playground\",\n};\n","import {\n    fetchQueryResultPromise, MySqlQueryConfig, MySqlQueryResult, QueryType\n} from \"data-sweet-query\";\n\nimport { DEFAULT_MYSQL_QUERY_SOURCE_CONFIG } from \"../constant/QuerySources\";\n\nexport async function fetchContentPromise(): Promise<MySqlQueryResult> {\n    try {\n        const queryConfig: MySqlQueryConfig = {\n            type: QueryType.MYSQL,\n            source: DEFAULT_MYSQL_QUERY_SOURCE_CONFIG,\n            database: \"poem\",\n            table: \"poem\",\n            sql: \"select * from poem_by_date limit 0, 1000\",\n        };\n        const result = await fetchQueryResultPromise(queryConfig);\n\n        return result;\n    } catch (error) {\n        throw error;\n    }\n}","import { createSelector } from \"reselect\";\n\nimport { getPoemFromRows } from \"../adaptor/ContentAdaptor\";\nimport { State } from \"../reducer/Reducer\";\n\n// import data from \"../data/poem_20200416.js\";\n// import { getFormattedCameraReadyContent } from \"../manager/FormatManager\";\n\n// const lines = data.split(/(?<!\\r)\\n/);\n// let outputLines = [];\n// for (const line of lines) {\n//     if (line.startsWith(\"(\")) {\n//         const fields = line.split(\",\");\n//         const content = fields[5].slice(2, -1);\n//         const formattedContent = getFormattedCameraReadyContent(content);\n//         fields[5] = \" '\" + formattedContent + \"'\";\n//         outputLines.push(fields.join(\",\"));\n//     } else {\n//         outputLines.push(line);\n//     }\n// }\n\nexport const getContentState = (state: State) => state.contentState;\n\nexport const getPoems = createSelector([getContentState], (contentState) =>\n    getPoemFromRows(contentState.content.rows || [])\n);\n","import { Poem } from \"../type/Types\";\n\nexport function getPoemFromRows(rows: any[]): Poem[] {\n    return rows.map((row) => ({\n        title: row.title || \"\",\n        subtitle: row.subtitle || \"\",\n        body: row.camera_ready_content || \"\",\n    }));\n}\n","import { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\n\nimport {\n    receiveContent, receiveContentError, requestContent\n} from \"../action/Actions\";\nimport Content from \"../component/Content\";\nimport { fetchContentPromise } from \"../manager/ConnectionManager\";\nimport { State } from \"../reducer/Reducer\";\nimport { getPoems } from \"../selector/ContentStateSelector\";\n\nfunction mapStateToProps(state: State) {\n    return {\n        poems: getPoems(state),\n    };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n    return {\n        fetchContent: async () => {\n            dispatch(requestContent());\n            try {\n                const content = await fetchContentPromise();\n                dispatch(receiveContent(content));\n            } catch (error) {\n                dispatch(receiveContentError(error));\n            }\n        },\n    };\n}\n\nconst ContentContainer = connect(mapStateToProps, mapDispatchToProps)(Content);\n\nexport default ContentContainer;\n","import { INITIAL_CONTENT_STATE } from \"../constant/Constants\";\nimport { ActionType, ContentState, ContentStateAction } from \"../type/Types\";\n\nfunction contentStateReducer(\n    state: ContentState = INITIAL_CONTENT_STATE,\n    action: ContentStateAction\n): ContentState {\n    switch(action.type) {\n        case ActionType.REQUEST_CONTENT:\n            break;\n        case ActionType.RECEIVE_CONTENT:\n            state = {\n                ...state,\n                content: action.content,\n            }\n            break;\n        case ActionType.RECEIVE_CONTENT_ERROR:\n            break;\n    }\n\n    return state;\n}\n\nexport default contentStateReducer;","import contentStateReducer from \"./ContentStateReducer\";\n\nfunction Reducer(state: any = {}, action: any) {\n    return {\n        // appState: appStateReducer(state.appState, action),\n        contentState: contentStateReducer(state.contentState, action),\n    };\n}\n\nexport default Reducer;\n\nexport type State = ReturnType<typeof Reducer>;\n","import { createStore } from \"redux\";\n\n// import { createLogger } from \"redux-logger\";\nimport Reducer from \"../reducer/Reducer\";\n\n// const loggerMiddleware = createLogger();\n// const Store = createStore(Reducer, applyMiddleware(loggerMiddleware));\n\nconst Store = createStore(Reducer);\n\nexport default Store;\n","import \"./font/ziyuesongkeben.ttf\";\nimport \"./App.css\";\n\nimport React from \"react\";\nimport { Provider } from \"react-redux\";\n\nimport { Grid, makeStyles } from \"@material-ui/core\";\n\nimport ContentContainer from \"./container/ContentContainer\";\nimport Store from \"./store/Store\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    grid: {\n        minHeight: \"100vh\",\n    },\n    header: {\n        flexBasis: \"calc(75vh - 34rem)\",\n        display: \"flex\",\n    },\n    headerContent: {\n        width: \"100%\",\n        // backgroundColor: \"red\",\n    },\n    main: {\n        flexBasis: \"44rem\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n    },\n    footer: {\n        flexBasis: \"calc(25vh - 10rem)\",\n        display: \"flex\",\n    },\n    footerContent: {\n        width: \"100%\",\n    },\n}));\n\nfunction App() {\n    const classes = useStyles();\n\n    return (\n        <Provider store={Store}>\n            <div className=\"App\">\n                <div className=\"AppBody\">\n                    <Grid\n                        className={classes.grid}\n                        container\n                        direction=\"column\"\n                        justify=\"space-between\"\n                        alignItems=\"stretch\"\n                    >\n                        <Grid className={classes.header} item xs={12}>\n                            <div className={classes.headerContent} />\n                        </Grid>\n                        <Grid className={classes.main} item xs={12}>\n                            <ContentContainer />\n                        </Grid>\n                        <Grid className={classes.footer} item xs={12}>\n                            <div className={classes.footerContent} />\n                        </Grid>\n                    </Grid>\n                </div>\n            </div>\n        </Provider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import \"./index.css\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}