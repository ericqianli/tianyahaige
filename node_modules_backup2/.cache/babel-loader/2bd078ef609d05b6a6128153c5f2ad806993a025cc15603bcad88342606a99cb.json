{"ast":null,"code":"// Actions\nexport let ActionType=/*#__PURE__*/function(ActionType){ActionType[\"REQUEST_CONTENT\"]=\"REQUEST_CONTENT\";ActionType[\"RECEIVE_CONTENT\"]=\"RECEIVE_CONTENT\";ActionType[\"RECEIVE_CONTENT_ERROR\"]=\"RECEIVE_CONTENT_ERROR\";ActionType[\"TOGGLE_SAMPLED\"]=\"TOGGLE_SAMPLED\";return ActionType;}({});// Action Types\n// States","map":{"version":3,"names":["ActionType"],"sources":["/Users/liqian/projects/tianyahaige/src/type/Types.ts"],"sourcesContent":["import { List } from \"immutable\";\n\n// Actions\nexport enum ActionType {\n    REQUEST_CONTENT = \"REQUEST_CONTENT\",\n    RECEIVE_CONTENT = \"RECEIVE_CONTENT\",\n    RECEIVE_CONTENT_ERROR = \"RECEIVE_CONTENT_ERROR\",\n    TOGGLE_SAMPLED = \"TOGGLE_SAMPLED\",\n}\n\n// Action Types\nexport interface RequestContentAction {\n    type: ActionType.REQUEST_CONTENT;\n}\n\nexport interface ReceiveContentAction {\n    type: ActionType.RECEIVE_CONTENT;\n    content: List<Poem>;\n}\n\nexport interface ReceiveContentErrorAction {\n    type: ActionType.RECEIVE_CONTENT_ERROR;\n    error: any;\n}\n\nexport type ContentStateAction =\n    | RequestContentAction\n    | ReceiveContentAction\n    | ReceiveContentErrorAction;\n\nexport interface ToggleSampledAction {\n    type: ActionType.TOGGLE_SAMPLED;\n}\n\nexport type AppStateAction = ToggleSampledAction;\n\n// States\nexport interface ContentState {\n    content: List<Poem>;\n}\n\nexport interface AppState {\n    sampled: boolean;\n}\n\nexport interface Poem {\n    id: number;\n    date: string;\n    title: string;\n    subtitle: string;\n    body: string;\n    collections: number[];\n}\n\nexport interface Line {\n    title: string;\n    subtitle: string;\n    body: string;\n}\n\nexport type Page = Line[];\n"],"mappings":"AAEA;AACA,UAAY,CAAAA,UAAU,uBAAVA,UAAU,EAAVA,UAAU,sCAAVA,UAAU,sCAAVA,UAAU,kDAAVA,UAAU,0CAAV,CAAAA,UAAU,OAOtB;AA0BA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}