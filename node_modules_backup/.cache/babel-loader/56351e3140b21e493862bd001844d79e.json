{"ast":null,"code":"import { SUBTITLE_CHARACTERS_PER_LINE, SUBTITLE_NO_WRAP_LIMIT } from \"../constant/Constants\";\nexport function getFormattedSubtitle(title, subtitle) {\n  const englishRegex = /^[A-Za-z0-9]/;\n  if (englishRegex.test(subtitle)) {\n    return subtitle.split(\"\\r\\n\");\n  }\n  let len = subtitle.length;\n  if (title !== \"\" && len <= SUBTITLE_NO_WRAP_LIMIT) {\n    return [subtitle];\n  }\n  let remaining = SUBTITLE_CHARACTERS_PER_LINE * 2;\n  if (title !== \"\") {\n    remaining -= (title.length * 2 + 5) * 2;\n  }\n  while (len > remaining) {\n    len -= remaining;\n    remaining = SUBTITLE_CHARACTERS_PER_LINE * 2;\n  }\n  const tailLength = len >>> 1;\n  return [subtitle.slice(0, -tailLength), subtitle.slice(-tailLength)];\n}","map":{"version":3,"names":["SUBTITLE_CHARACTERS_PER_LINE","SUBTITLE_NO_WRAP_LIMIT","getFormattedSubtitle","title","subtitle","englishRegex","test","split","len","length","remaining","tailLength","slice"],"sources":["/Users/liqian/projects/tianyahaige/src/manager/FormatManager.ts"],"sourcesContent":["import {\n    SUBTITLE_CHARACTERS_PER_LINE,\n    SUBTITLE_NO_WRAP_LIMIT,\n} from \"../constant/Constants\";\n\nexport function getFormattedSubtitle(title: string, subtitle: string) {\n    const englishRegex = /^[A-Za-z0-9]/;\n    if (englishRegex.test(subtitle)) {\n        return subtitle.split(\"\\r\\n\");\n    }\n\n    let len = subtitle.length;\n\n    if (title !== \"\" && len <= SUBTITLE_NO_WRAP_LIMIT) {\n        return [subtitle];\n    }\n\n    let remaining = SUBTITLE_CHARACTERS_PER_LINE * 2;\n    if (title !== \"\") {\n        remaining -= (title.length * 2 + 5) * 2;\n    }\n\n    while (len > remaining) {\n        len -= remaining;\n        remaining = SUBTITLE_CHARACTERS_PER_LINE * 2;\n    }\n\n    const tailLength = len >>> 1;\n\n    return [subtitle.slice(0, -tailLength), subtitle.slice(-tailLength)];\n}\n"],"mappings":"AAAA,SACIA,4BAA4B,EAC5BC,sBAAsB,QACnB,uBAAuB;AAE9B,OAAO,SAASC,oBAAoBA,CAACC,KAAa,EAAEC,QAAgB,EAAE;EAClE,MAAMC,YAAY,GAAG,cAAc;EACnC,IAAIA,YAAY,CAACC,IAAI,CAACF,QAAQ,CAAC,EAAE;IAC7B,OAAOA,QAAQ,CAACG,KAAK,CAAC,MAAM,CAAC;EACjC;EAEA,IAAIC,GAAG,GAAGJ,QAAQ,CAACK,MAAM;EAEzB,IAAIN,KAAK,KAAK,EAAE,IAAIK,GAAG,IAAIP,sBAAsB,EAAE;IAC/C,OAAO,CAACG,QAAQ,CAAC;EACrB;EAEA,IAAIM,SAAS,GAAGV,4BAA4B,GAAG,CAAC;EAChD,IAAIG,KAAK,KAAK,EAAE,EAAE;IACdO,SAAS,IAAI,CAACP,KAAK,CAACM,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC;EAC3C;EAEA,OAAOD,GAAG,GAAGE,SAAS,EAAE;IACpBF,GAAG,IAAIE,SAAS;IAChBA,SAAS,GAAGV,4BAA4B,GAAG,CAAC;EAChD;EAEA,MAAMW,UAAU,GAAGH,GAAG,KAAK,CAAC;EAE5B,OAAO,CAACJ,QAAQ,CAACQ,KAAK,CAAC,CAAC,EAAE,CAACD,UAAU,CAAC,EAAEP,QAAQ,CAACQ,KAAK,CAAC,CAACD,UAAU,CAAC,CAAC;AACxE","ignoreList":[]},"metadata":{},"sourceType":"module"}