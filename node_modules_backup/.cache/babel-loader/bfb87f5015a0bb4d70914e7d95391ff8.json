{"ast":null,"code":"import{BODY_CHARACTERS_PER_LINE,CHARACTERS_TO_REMOVE,LINES_PER_PAGE,SUBTITLE_CHARACTERS_PER_LINE}from\"../constant/Constants\";export function getPoemFromRows(rows){return rows.toJS();}// For English or Hindi, we can fit more letters.\nfunction getFontWidthMultiplier(subtitle){const englishRegex=/^[A-Za-z0-9]/;if(englishRegex.test(subtitle)){return 2.0;}return 1.0;}function getLineFromPoem(poem){const{title,subtitle,body}=poem;if(title!==\"\"){poem.title=\"\";let remainingSubtitleLength=(SUBTITLE_CHARACTERS_PER_LINE-title.length*2-5)*2*getFontWidthMultiplier(subtitle);if(subtitle.length<=remainingSubtitleLength){poem.subtitle=\"\";return{title,subtitle,body:\"\"};}else{const includedSubtitle=poem.subtitle.slice(0,remainingSubtitleLength);poem.subtitle=poem.subtitle.slice(remainingSubtitleLength);return{title,subtitle:includedSubtitle,body:\"\"};}}// title has been processed\nif(subtitle!==\"\"){let remainingSubtitleLength=SUBTITLE_CHARACTERS_PER_LINE*2*getFontWidthMultiplier(subtitle);if(subtitle.length<=remainingSubtitleLength){poem.subtitle=\"\";return{title,subtitle,body:\"\"};}else{const includedSubtitle=poem.subtitle.slice(0,remainingSubtitleLength);poem.subtitle=poem.subtitle.slice(remainingSubtitleLength);return{title,subtitle:includedSubtitle,body:\"\"};}}// title and subtitle have both been processed\nlet displayLength=0;let totalLength=0;const removeSet=new Set(CHARACTERS_TO_REMOVE);for(totalLength=0;totalLength<body.length;totalLength++){const char=body[totalLength];if(char===\"\\r\"){break;}if(!removeSet.has(char)){displayLength++;}if(displayLength===BODY_CHARACTERS_PER_LINE){if(totalLength<body.length-1&&removeSet.has(body[totalLength+1])){totalLength++;}totalLength++;break;}}if(body.length===totalLength){poem.body=\"\";return{title,subtitle,body};}else{const includedBody=poem.body.slice(0,totalLength);let remainingBody=poem.body.slice(totalLength);if(remainingBody.startsWith(\"\\r\")){remainingBody=remainingBody.slice(2);}poem.body=remainingBody;return{title,subtitle,body:includedBody};}}export function getLinesFromPoems(poems){if(poems.length===0){return[];}const lines=[];for(const poem of poems){const poemClone={...poem};while(poemClone.body!==\"\"){const line=getLineFromPoem(poemClone);lines.push(line);}}return lines;}export function getPagesFromLines(lines){const pages=[];for(let i=0;i<lines.length;i+=LINES_PER_PAGE){const page=lines.slice(i,i+LINES_PER_PAGE);pages.push(page);}return pages;}","map":{"version":3,"names":["BODY_CHARACTERS_PER_LINE","CHARACTERS_TO_REMOVE","LINES_PER_PAGE","SUBTITLE_CHARACTERS_PER_LINE","getPoemFromRows","rows","toJS","getFontWidthMultiplier","subtitle","englishRegex","test","getLineFromPoem","poem","title","body","remainingSubtitleLength","length","includedSubtitle","slice","displayLength","totalLength","removeSet","Set","char","has","includedBody","remainingBody","startsWith","getLinesFromPoems","poems","lines","poemClone","line","push","getPagesFromLines","pages","i","page"],"sources":["/Users/liqian/projects/tianyahaige/src/adaptor/ContentAdaptor.ts"],"sourcesContent":["import {\n    BODY_CHARACTERS_PER_LINE,\n    CHARACTERS_TO_REMOVE,\n    LINES_PER_PAGE,\n    SUBTITLE_CHARACTERS_PER_LINE,\n} from \"../constant/Constants\";\nimport { Line, Page, Poem } from \"../type/Types\";\nimport { List } from \"immutable\";\n\nexport function getPoemFromRows(rows: List<Poem>): Poem[] {\n    return rows.toJS();\n}\n\n// For English or Hindi, we can fit more letters.\nfunction getFontWidthMultiplier(subtitle: string) {\n    const englishRegex = /^[A-Za-z0-9]/;\n    if (englishRegex.test(subtitle)) {\n        return 2.0;\n    }\n    return 1.0;\n}\n\nfunction getLineFromPoem(poem: Poem): Line {\n    const { title, subtitle, body } = poem;\n\n    if (title !== \"\") {\n        poem.title = \"\";\n\n        let remainingSubtitleLength =\n            (SUBTITLE_CHARACTERS_PER_LINE - title.length * 2 - 5) *\n            2 *\n            getFontWidthMultiplier(subtitle);\n\n        if (subtitle.length <= remainingSubtitleLength) {\n            poem.subtitle = \"\";\n            return {\n                title,\n                subtitle,\n                body: \"\",\n            };\n        } else {\n            const includedSubtitle = poem.subtitle.slice(\n                0,\n                remainingSubtitleLength\n            );\n            poem.subtitle = poem.subtitle.slice(remainingSubtitleLength);\n            return {\n                title,\n                subtitle: includedSubtitle,\n                body: \"\",\n            };\n        }\n    }\n\n    // title has been processed\n    if (subtitle !== \"\") {\n        let remainingSubtitleLength =\n            SUBTITLE_CHARACTERS_PER_LINE * 2 * getFontWidthMultiplier(subtitle);\n\n        if (subtitle.length <= remainingSubtitleLength) {\n            poem.subtitle = \"\";\n            return {\n                title,\n                subtitle,\n                body: \"\",\n            };\n        } else {\n            const includedSubtitle = poem.subtitle.slice(\n                0,\n                remainingSubtitleLength\n            );\n            poem.subtitle = poem.subtitle.slice(remainingSubtitleLength);\n            return {\n                title,\n                subtitle: includedSubtitle,\n                body: \"\",\n            };\n        }\n    }\n\n    // title and subtitle have both been processed\n    let displayLength = 0;\n    let totalLength = 0;\n    const removeSet = new Set(CHARACTERS_TO_REMOVE);\n    for (totalLength = 0; totalLength < body.length; totalLength++) {\n        const char = body[totalLength];\n        if (char === \"\\r\") {\n            break;\n        }\n        if (!removeSet.has(char)) {\n            displayLength++;\n        }\n        if (displayLength === BODY_CHARACTERS_PER_LINE) {\n            if (\n                totalLength < body.length - 1 &&\n                removeSet.has(body[totalLength + 1])\n            ) {\n                totalLength++;\n            }\n            totalLength++;\n            break;\n        }\n    }\n\n    if (body.length === totalLength) {\n        poem.body = \"\";\n        return {\n            title,\n            subtitle,\n            body,\n        };\n    } else {\n        const includedBody = poem.body.slice(0, totalLength);\n        let remainingBody = poem.body.slice(totalLength);\n        if (remainingBody.startsWith(\"\\r\")) {\n            remainingBody = remainingBody.slice(2);\n        }\n        poem.body = remainingBody;\n        return {\n            title,\n            subtitle,\n            body: includedBody,\n        };\n    }\n}\n\nexport function getLinesFromPoems(poems: Poem[]): Line[] {\n    if (poems.length === 0) {\n        return [];\n    }\n\n    const lines: Line[] = [];\n\n    for (const poem of poems) {\n        const poemClone = { ...poem };\n        while (poemClone.body !== \"\") {\n            const line = getLineFromPoem(poemClone);\n            lines.push(line);\n        }\n    }\n\n    return lines;\n}\n\nexport function getPagesFromLines(lines: Line[]): Page[] {\n    const pages = [];\n\n    for (let i = 0; i < lines.length; i += LINES_PER_PAGE) {\n        const page = lines.slice(i, i + LINES_PER_PAGE);\n        pages.push(page);\n    }\n\n    return pages;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}