{"ast":null,"code":"import*as poemData from\"../data/poem.json\";import Immutable from\"immutable\";const DBUtil={fetchAllPoems(){const poems=poemData.default;return new Promise(resolve=>resolve(Immutable.List(poems).map(poem=>poem)));},// Implements Durstenfeld shuffle, an optimized version of Fisher-Yates.\nshuffle(array){for(var i=array.length-1;i>0;i--){const j=Math.floor(Math.random()*(i+1));var temp=array[i];array[i]=array[j];array[j]=temp;}},fetchPoemsByCollection(collection,sampled){const poems=poemData.default;const collectionPoems=poems.filter(poem=>poem.collections.includes(collection));return new Promise(resolve=>{if(sampled){this.shuffle(collectionPoems);const selectedPoems=collectionPoems.slice(0,18).sort((p1,p2)=>p1.id-p2.id);resolve(Immutable.List(selectedPoems).map(poem=>poem));}else{resolve(Immutable.List(collectionPoems).map(poem=>poem));}});}};export default DBUtil;","map":{"version":3,"names":["poemData","Immutable","DBUtil","fetchAllPoems","poems","default","Promise","resolve","List","map","poem","shuffle","array","i","length","j","Math","floor","random","temp","fetchPoemsByCollection","collection","sampled","collectionPoems","filter","collections","includes","selectedPoems","slice","sort","p1","p2","id"],"sources":["/Users/liqian/projects/tianyahaige/src/util/DBUtil.ts"],"sourcesContent":["import * as poemData from \"../data/poem.json\";\n\nimport Immutable from \"immutable\";\nimport { Poem } from \"../type/Types\";\n\nconst DBUtil = {\n    fetchAllPoems(): Promise<any> {\n        const poems: any[] = (poemData as any).default;\n\n        return new Promise((resolve) =>\n            resolve(Immutable.List(poems).map((poem: any) => poem as Poem))\n        );\n    },\n\n    // Implements Durstenfeld shuffle, an optimized version of Fisher-Yates.\n    shuffle(array: any[]) {\n        for (var i = array.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            var temp = array[i];\n            array[i] = array[j];\n            array[j] = temp;\n        }\n    },\n\n    fetchPoemsByCollection(collection: number, sampled: boolean): Promise<any> {\n        const poems: any[] = (poemData as any).default;\n        const collectionPoems = poems.filter((poem) =>\n            poem.collections.includes(collection)\n        );\n        return new Promise((resolve) => {\n            if (sampled) {\n                this.shuffle(collectionPoems);\n                const selectedPoems = collectionPoems\n                    .slice(0, 18)\n                    .sort((p1, p2) => p1.id - p2.id);\n                resolve(\n                    Immutable.List(selectedPoems).map(\n                        (poem: any) => poem as Poem\n                    )\n                );\n            } else {\n                resolve(\n                    Immutable.List(collectionPoems).map(\n                        (poem: any) => poem as Poem\n                    )\n                );\n            }\n        });\n    },\n};\n\nexport default DBUtil;\n"],"mappings":"AAAA,MAAO,GAAK,CAAAA,QAAQ,KAAM,mBAAmB,CAE7C,MAAO,CAAAC,SAAS,KAAM,WAAW,CAGjC,KAAM,CAAAC,MAAM,CAAG,CACXC,aAAaA,CAAA,CAAiB,CAC1B,KAAM,CAAAC,KAAY,CAAIJ,QAAQ,CAASK,OAAO,CAE9C,MAAO,IAAI,CAAAC,OAAO,CAAEC,OAAO,EACvBA,OAAO,CAACN,SAAS,CAACO,IAAI,CAACJ,KAAK,CAAC,CAACK,GAAG,CAAEC,IAAS,EAAKA,IAAY,CAAC,CAClE,CAAC,CACL,CAAC,CAED;AACAC,OAAOA,CAACC,KAAY,CAAE,CAClB,IAAK,GAAI,CAAAC,CAAC,CAAGD,KAAK,CAACE,MAAM,CAAG,CAAC,CAAED,CAAC,CAAG,CAAC,CAAEA,CAAC,EAAE,CAAE,CACvC,KAAM,CAAAE,CAAC,CAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,EAAIL,CAAC,CAAG,CAAC,CAAC,CAAC,CAC7C,GAAI,CAAAM,IAAI,CAAGP,KAAK,CAACC,CAAC,CAAC,CACnBD,KAAK,CAACC,CAAC,CAAC,CAAGD,KAAK,CAACG,CAAC,CAAC,CACnBH,KAAK,CAACG,CAAC,CAAC,CAAGI,IAAI,CACnB,CACJ,CAAC,CAEDC,sBAAsBA,CAACC,UAAkB,CAAEC,OAAgB,CAAgB,CACvE,KAAM,CAAAlB,KAAY,CAAIJ,QAAQ,CAASK,OAAO,CAC9C,KAAM,CAAAkB,eAAe,CAAGnB,KAAK,CAACoB,MAAM,CAAEd,IAAI,EACtCA,IAAI,CAACe,WAAW,CAACC,QAAQ,CAACL,UAAU,CACxC,CAAC,CACD,MAAO,IAAI,CAAAf,OAAO,CAAEC,OAAO,EAAK,CAC5B,GAAIe,OAAO,CAAE,CACT,IAAI,CAACX,OAAO,CAACY,eAAe,CAAC,CAC7B,KAAM,CAAAI,aAAa,CAAGJ,eAAe,CAChCK,KAAK,CAAC,CAAC,CAAE,EAAE,CAAC,CACZC,IAAI,CAAC,CAACC,EAAE,CAAEC,EAAE,GAAKD,EAAE,CAACE,EAAE,CAAGD,EAAE,CAACC,EAAE,CAAC,CACpCzB,OAAO,CACHN,SAAS,CAACO,IAAI,CAACmB,aAAa,CAAC,CAAClB,GAAG,CAC5BC,IAAS,EAAKA,IACnB,CACJ,CAAC,CACL,CAAC,IAAM,CACHH,OAAO,CACHN,SAAS,CAACO,IAAI,CAACe,eAAe,CAAC,CAACd,GAAG,CAC9BC,IAAS,EAAKA,IACnB,CACJ,CAAC,CACL,CACJ,CAAC,CAAC,CACN,CACJ,CAAC,CAED,cAAe,CAAAR,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module"}