{"ast":null,"code":"import * as poemData from \"../data/poem.json\";\nimport Immutable from \"immutable\";\nconst DBUtil = {\n  fetchAllPoems() {\n    const poems = poemData.default;\n    return new Promise(resolve => resolve(Immutable.List(poems).map(poem => poem)));\n  },\n  // Implements Durstenfeld shuffle, an optimized version of Fisher-Yates.\n  shuffle(array) {\n    for (var i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      var temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n  },\n  fetchPoemsByCollection(collection, sampled) {\n    const poems = poemData.default;\n    const collectionPoems = poems.filter(poem => poem.collections.includes(collection));\n    return new Promise(resolve => {\n      if (sampled) {\n        this.shuffle(collectionPoems);\n        const selectedPoems = collectionPoems.slice(0, 18).sort((p1, p2) => p1.id - p2.id);\n        resolve(Immutable.List(selectedPoems).map(poem => poem));\n      } else {\n        resolve(Immutable.List(collectionPoems).map(poem => poem));\n      }\n    });\n  }\n};\nexport default DBUtil;","map":{"version":3,"names":["poemData","Immutable","DBUtil","fetchAllPoems","poems","default","Promise","resolve","List","map","poem","shuffle","array","i","length","j","Math","floor","random","temp","fetchPoemsByCollection","collection","sampled","collectionPoems","filter","collections","includes","selectedPoems","slice","sort","p1","p2","id"],"sources":["/Users/liqian/projects/tianyahaige/src/util/DBUtil.ts"],"sourcesContent":["import * as poemData from \"../data/poem.json\";\n\nimport Immutable from \"immutable\";\nimport { Poem } from \"../type/Types\";\n\nconst DBUtil = {\n    fetchAllPoems(): Promise<any> {\n        const poems: any[] = (poemData as any).default;\n\n        return new Promise((resolve) =>\n            resolve(Immutable.List(poems).map((poem: any) => poem as Poem))\n        );\n    },\n\n    // Implements Durstenfeld shuffle, an optimized version of Fisher-Yates.\n    shuffle(array: any[]) {\n        for (var i = array.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            var temp = array[i];\n            array[i] = array[j];\n            array[j] = temp;\n        }\n    },\n\n    fetchPoemsByCollection(collection: number, sampled: boolean): Promise<any> {\n        const poems: any[] = (poemData as any).default;\n        const collectionPoems = poems.filter((poem) =>\n            poem.collections.includes(collection)\n        );\n        return new Promise((resolve) => {\n            if (sampled) {\n                this.shuffle(collectionPoems);\n                const selectedPoems = collectionPoems\n                    .slice(0, 18)\n                    .sort((p1, p2) => p1.id - p2.id);\n                resolve(\n                    Immutable.List(selectedPoems).map(\n                        (poem: any) => poem as Poem\n                    )\n                );\n            } else {\n                resolve(\n                    Immutable.List(collectionPoems).map(\n                        (poem: any) => poem as Poem\n                    )\n                );\n            }\n        });\n    },\n};\n\nexport default DBUtil;\n"],"mappings":"AAAA,OAAO,KAAKA,QAAQ,MAAM,mBAAmB;AAE7C,OAAOC,SAAS,MAAM,WAAW;AAGjC,MAAMC,MAAM,GAAG;EACXC,aAAaA,CAAA,EAAiB;IAC1B,MAAMC,KAAY,GAAIJ,QAAQ,CAASK,OAAO;IAE9C,OAAO,IAAIC,OAAO,CAAEC,OAAO,IACvBA,OAAO,CAACN,SAAS,CAACO,IAAI,CAACJ,KAAK,CAAC,CAACK,GAAG,CAAEC,IAAS,IAAKA,IAAY,CAAC,CAClE,CAAC;EACL,CAAC;EAED;EACAC,OAAOA,CAACC,KAAY,EAAE;IAClB,KAAK,IAAIC,CAAC,GAAGD,KAAK,CAACE,MAAM,GAAG,CAAC,EAAED,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MACvC,MAAME,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIL,CAAC,GAAG,CAAC,CAAC,CAAC;MAC7C,IAAIM,IAAI,GAAGP,KAAK,CAACC,CAAC,CAAC;MACnBD,KAAK,CAACC,CAAC,CAAC,GAAGD,KAAK,CAACG,CAAC,CAAC;MACnBH,KAAK,CAACG,CAAC,CAAC,GAAGI,IAAI;IACnB;EACJ,CAAC;EAEDC,sBAAsBA,CAACC,UAAkB,EAAEC,OAAgB,EAAgB;IACvE,MAAMlB,KAAY,GAAIJ,QAAQ,CAASK,OAAO;IAC9C,MAAMkB,eAAe,GAAGnB,KAAK,CAACoB,MAAM,CAAEd,IAAI,IACtCA,IAAI,CAACe,WAAW,CAACC,QAAQ,CAACL,UAAU,CACxC,CAAC;IACD,OAAO,IAAIf,OAAO,CAAEC,OAAO,IAAK;MAC5B,IAAIe,OAAO,EAAE;QACT,IAAI,CAACX,OAAO,CAACY,eAAe,CAAC;QAC7B,MAAMI,aAAa,GAAGJ,eAAe,CAChCK,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CACZC,IAAI,CAAC,CAACC,EAAE,EAAEC,EAAE,KAAKD,EAAE,CAACE,EAAE,GAAGD,EAAE,CAACC,EAAE,CAAC;QACpCzB,OAAO,CACHN,SAAS,CAACO,IAAI,CAACmB,aAAa,CAAC,CAAClB,GAAG,CAC5BC,IAAS,IAAKA,IACnB,CACJ,CAAC;MACL,CAAC,MAAM;QACHH,OAAO,CACHN,SAAS,CAACO,IAAI,CAACe,eAAe,CAAC,CAACd,GAAG,CAC9BC,IAAS,IAAKA,IACnB,CACJ,CAAC;MACL;IACJ,CAAC,CAAC;EACN;AACJ,CAAC;AAED,eAAeR,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module"}